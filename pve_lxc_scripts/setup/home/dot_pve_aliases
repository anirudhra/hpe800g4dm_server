# (c) Anirudh Acharya 2024
# useful aliases

## ls aliases
## Colorize the ls output ##
alias ls='ls --color=auto -FG'
#export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
alias ll='ls -la --color | less -R'
## Show hidden files ##
alias ll.='ls -l -d -FG --color=auto .* | less'
alias ls.='ls -d -FG --color=auto .*'

alias l='ls -lFh'     #size,show type,human readable
alias la='ls -lAFh'   #long list,show almost all,show type,human readable
alias lr='ls -tRFh'   #sorted by date,recursive,show type,human readable
alias lt='ls -ltFh'   #long list,sorted by date,show type,human readable
alias ldot='ls -ld .*'
alias lS='ls -1FSsh'
alias lart='ls -1Fcart'
alias lrt='ls -1Fcrt'
alias lsr='ls -lARFh' #Recursive list of files and directories
alias lsn='ls -1'     #A column contains name of files and directories

#quick access to zshrc and bashrc files
alias zshrc='${=EDITOR} ${ZDOTDIR:-$HOME}/.zshrc'
alias bashrc='${=EDITOR} ${$HOME}/.bashrc'

## a quick way to get out of current directory ##
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias grepc='grep --color=always'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '
alias hgrep="fc -El 0 | grep"
alias greph='history | grep'

#directory related aliases
alias mkdir='mkdir -pv'
alias md='mkdir -pv'
alias rd='rmdir'

# "dos" aliases
alias cls='clear'
alias dir='ls'

#stow aliases
alias unstow='cd $HOME/dotfiles/home && stow --verbose=2 --target=$HOME --delete . && cd -'
alias restow='cd $HOME/dotfiles/home && stow --verbose=1 --target=$HOME --stow --adopt . && cd -'

alias path='echo -e ${PATH//:/\\n}'
alias now='date +"%T"'
alias nowtime='now'
alias nowdate='date +"%d-%m-%Y"'
alias a='alias'

#console
alias please='sudo $( history -p !! )'
alias count='find . -type f | wc -l'
alias listps='ps aux | grep -v "ps aux" | grep -Ev "\[.+\]" | grep -v grep'
alias diskuse="echo 'Device          Size  Used  Free  Mount Point' && df -h --output=source,size,used,avail,target | grep dev/root | sort"
alias free='free -h'

# find aliases
alias fdir='find . -type d -name'
alias ffile='find . -type f -name'

## disk space clean output ##
alias dud='du -d 1 -h'
alias df='df -P -h'
alias du='du -ch'
alias duf='duf -hide special'
alias dirsize='du -sh'

# sort, unset etc.
alias help='man'
alias sortnr='sort -n -r'
alias unexport='unset'

#file aliases
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

## get top process eating memory
alias psmem='ps aux | sort -nr -k 4'
alias psmem10='ps aux | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps aux | sort -nr -k 3'
alias pscpu10='ps aux | sort -nr -k 3 | head -10'

# become root #
alias root='sudo -i'
alias su='sudo -i'
 
# editor aliases
#alias vim='nano'
#alias vi='nano'
#alias vi='vim'
#alias gvim='vim'
#alias sudovi='sudo vi'
alias vi='nvim'
alias vim='nvim'
alias vis='nvim "+set si"'
alias sudovi='sudo nvim'
alias edit="vim"
alias pager="$PAGER"
alias readme="find . -maxdepth 1 -iname \"readme*\" -exec less {} \;"

# Tree
if [ ! -x "$(which tree 2>/dev/null)" ]
then
  alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
fi

# Get rid of .DS_Store files recursiveloy in current directory tree
alias dsclean='find . -type f -name .DS_Store -delete && find . -type f -name ._.DS_Store -delete'
alias dotclean='find . -name ._\* -delete'

#cleanup caches,fedora and debian
if [ -x "$(command -v apt-get)" ]; then
#if (( ${+commands[apt-get]} )); then 
    # add condition for debian/derivatives specific command here
    alias fullclean='sudo apt clean && sudo apt autoclean && sudo apt autoremove'
    alias fullupdate='sudo apt update && sudo apt dist-upgrade'
    alias gvim='nvim'
    alias fm='nautilus . &'
    alias gopvescripts='cd /mnt/sata-ssd/pve_server/pve_lxc_scripts/maintenance'
#elif (( ${+commands[dnf]} )); then 
elif [ -x "$(command -v dnf)" ]; then 
    # add condition for fedora specific command here
    alias fullclean='sudo dnf clean all && sudo dnf autoremove'
    alias fullupdate='sudo dnf update --refresh && sudo dnf upgrade -y && sudo flatpak upgrade -y'
    alias distupgrade='sudo dnf update --refresh && sudo dnf distro-sync'
    alias fwupdate='sudo fwupdmgr refresh --force && sudo fwupdmgr get-updates && sudo fwupdmgr update'
    alias checkfw='sudo fwupdmgr get-devices'
    alias gvim='nvim'
    alias fm='nautilus . &'
    alias showkernel='sudo rpm -q kernel-core && uname -a'
#elif (( ${+commands[open]} )); then 
elif [ -x "$(command -v diskutil)" ]; then 
    # add condition for macos specific commmand here - diskutil not available on linux
    alias brew_update='brew update --greedy && brew upgrade && brew cleanup && brew doctor && brew update && brew cleanup'
    alias fullupdate='brew update --greedy && brew upgrade && brew cleanup && brew doctor && brew update && brew cleanup'
    alias fix_wireshark='cd /dev && sudo chown aacharya:admin bp*; cd -'
    alias flushdns='dscacheutil -flushcache'
    alias lscleanup='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder'
    alias cdf='open .'P='2>&1| pygmentize -l pytb'
    alias shuf='gshuf'
    alias gvim='vimr'
    #finder aliases
    alias finder='open'
    #cleanup caches
    alias cleanup='sudo update_dyld_shared_cache -force'
    #finder hidden files
    alias showhidden='defaults write com.apple.finder AppleShowAllFiles YES && killall Finder /System/Library/CoreServices/Finder.app'
    alias hidehidden='defaults write com.apple.finder AppleShowAllFiles NO && killall Finder /System/Library/CoreServices/Finder.app'
    alias gooc='cd ~/Downloads/OpenCore'
    # Desktop Programs
    alias preview="open -a '$PREVIEW'"
    alias xcode="open -a '/Applications/XCode.app'"
    alias filemerge="open -a '/Developer/Applications/Utilities/FileMerge.app'"
    alias safari="open -a safari"
    alias firefox="open -a firefox"
    alias chrome="open -a google\ chrome"
    alias textedit='open -a TextEdit'
    #finder aliases
    alias finder='open'
    #monitor cpu clock
    alias cpufreq="sudo powermetrics | grep \"CPU Average frequency as fraction of nominal\""
fi

# jupyterlab aliases
alias ipy="jupyter lab ~/code/github/jupyternb"

#git
alias gitpush="git pull && git add * && git commit -a && git push"

# other goto aliases
alias sysinfo='sudo inxi -Fzx'
alias godot='cd $HOME/dotfiles'
alias gocode='cd $HOME/code'
alias gogit='cd $HOME/code/github'

# docker files on server mount
alias gomedia='cd /mnt/server/ssd-media/media'
alias godata='cd /mnt/server/ssd-data'
alias godocker='cd /mnt/server/ssd-data/dockerapps'
alias dockerup='docker compose up -d'
alias dockerdown='docker compose down'
alias dockerrestart='docker compose down && docker compose up -d'
alias dockerupdate='docker compose down && docker compose pull && docker compose up -d --remove-orphans && docker image prune -f && docker system prune --volumes'
alias dockerbackup='sudo tar -zcvf ~/dockerapps.tar.gz /mnt/server/ssd-data/dockerapps'
alias dockerclean='docker system prune --volumes'
#alias dockerbackup='sudo tar -zcvf ~/dockerapps.tar.gz /opt/dockerapps'

# Enable syntax-highlighting in less/cat
# Note: needs source-highlight and highlight brew packages for these to work
#export LESSOPEN="| /usr/local/bin/src-hilite-lesspipe.sh %s"
#export LESS=" -R "
#alias less='less -m -N -g -i -J --underline-special --SILENT'
alias lessc='less -R'
alias more='less'
#alias cat='less'

# network related
# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'

## this one saved by butt so many times ##
alias wget='wget -c'

# iperf3, uses daemon on pve persever
alias iperfdown='iperf3 -Rc 10.100.100.50'
alias iperfup='iperf3 -c 10.100.100.50'

# ping aliases
alias pingrouter='ping 10.100.100.1'
alias pingserver='ping 10.100.100.50'

#ssh to LXC/VMs
alias sshblanka='ssh -o MACs=hmac-sha2-256 root@10.100.100.65'
alias sshha='ssh -o MACs=hmac-sha2-256 root@10.100.100.70'
alias sshjf='ssh -o MACs=hmac-sha2-256 root@10.100.100.80'
alias sshsagat='ssh -o MACs=hmac-sha2-256 root@10.100.100.75'
alias sshvega='ssh -o MACs=hmac-sha2-256 root@10.100.100.60'
alias sshventoy='ssh -o MACs=hmac-sha2-256 root@10.100.100.51'
alias sshwg='ssh -o MACs=hmac-sha2-256 root@10.100.100.55'
alias sshimm='ssh -o MACs=hmac-sha2-256 root@10.100.100.95'
# alias sshpaperless=''
# alias sshnc=''
# alias sshkodi=''
# alias sshfrigate=''

# by default always open a tmux session for PVE server, use sshserver for non-tmux version
alias sshpve='ssh -o MACs=hmac-sha2-256 root@10.100.100.50 -t "tmux attach || tmux new"'
alias sshserver='ssh -o MACs=hmac-sha2-256 root@10.100.100.50'
alias sshrouter='ssh admin@10.100.100.1 -p 12372'

# macos and linux services
#if (( ${+commands[open]} )); then
if [ -x "$(command -v diskutil)" ]; then 
    # macos services here, use diskutil to test if running on mac
    alias kext="kext" #FIXME
else
    # linux services
    alias booterrors='sudo journalctl  -b 0 -p 3'
    alias updateboot='sudo update-grub && sudo update-initramfs -u -k all'
    alias reservice='sudo systemctl daemon-reload'
    #use "refresh" followed by any command you want to constantly refresh on screen, Ctrl+C to quit
    alias refresh='watch --interval=3'
fi
######## functions ######################

mkcd()
{
    case $# in
    1)
        mkdir -p "$1"
        cd "$1"
        ;;
    *)
        echo "USAGE : mkcd <directory>"
        ;;
    esac
}

movemovie()
{
    case $# in
    1)
        chmod 777 "$1"
        chown -R nobody:nogroup "$1"
        mv "$1" /mnt/server/ssd-media/media/video/MyMovies
        ;;
    *)
        echo "USAGE : movemovie <movie_dir>"
        ;;
    esac
}

dockerupdateall()
{
    cd /mnt/server/ssd-data/dockerapps
    cd $(hostname) || exit
    find . -maxdepth 1 -type d \( ! -name . \) -not -path '*disabled*' -exec bash -c "cd '{}' && pwd && docker compose down && docker compose pull && docker compose up -d --remove-orphans" \;
    docker image prune -a -f
    docker system prune --volumes -f
}

cleanlocales()
{
    if (( ${+commands[open]} )); then 
       echo "Can only run on Linux!"
       exit
    fi
    sudo find /usr/share/locale/* -maxdepth 0 -type d -not -iname "en*" -exec rm -r {} \;
}

